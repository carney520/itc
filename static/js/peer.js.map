{"version":3,"sources":["../../dist/transport/transport.js","../../dist/transport/event-emitter.js","../../dist/utils.js","../../dist/index.js","peer.tsx","../../dist/transport/index.js","../../dist/transport/worker.js","../../dist/transport/storage.js"],"names":["Object","defineProperty","exports","value","EVENTS","CONNECTED","INITIAL","PONG","PING","BECOME_MASTER","DESTORY","MESSAGE","UPDATE_PEERS","UPDATE_MASTER","CALL","CALL_RESPONSE","ERRORS","NOT_FOUND","IGNORED","INNER_CALL","CHECK_ALIVE","BroadcastPeer","id","name","transport_1","__webpack_require__","uid","EventEmitter","_this","this","ready","destroyed","queue","defaultTimeout","callbacks","handlers","pendingQueue","watchingReady","on","flushPendingQueue","desc","event","handle","undefined","isMaster","then","yes","prototype","push","emit","off","idx","indexOf","splice","data","slice","forEach","h","setCallTimeout","time","send","peer","checkWorkerAvailable","postMessage","type","call","args","_i","arguments","length","waitReady","callInternal","response","handler","Error","Promise","res","timeout","rej","timer","fullfilled","rejecter","err","resolver","clearTimeout","payload","window","setTimeout","callReturn","error","_a","console","warn","responseInternal","message","apply","concat","catch","q","default","s4","Math","floor","random","toString","hash","str","i","charCodeAt","uuid","delay","getRandomIntInclusive","min","max","ceil","objEquals","a","b","key","hasOwnProperty","__assign","assign","t","s","n","p","instance","Worker","defaultOptions","useStorage","options","isSupport","Storage","ReactDOM","render","react__WEBPACK_IMPORTED_MODULE_2___default","createElement","ref","useRef","_useState","useState","_useState2","_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","setIsMaster","_useState3","_useState4","master","setMaster","_useState5","_useState6","peers","setPeers","_useState7","_useState8","position","setPosition","handleMouseMove","useCallback","evt","pos","clientX","clientY","current","worker","useEffect","location","search","match","itc","m","className","onMouseMove","map","join","style","left","top","document","getElementById","__export","worker_1","storage_1","__extends","extendStatics","d","setPrototypeOf","__proto__","Array","__","constructor","create","__importDefault","mod","__esModule","event_emitter_1","utils_1","WorkerPeer","MAX_TRY_TIME","WorkerTransport","_super","tryTimes","destroy","removeEventListener","port","onMessage","initializeWorker","SharedWorker","genSource","addEventListener","handleWorkerError","start","filename","lineno","colno","source","target","log","initialState","currentMaster","prevMaster","get","enumerable","configurable","getPeers","getMaster","getSource","cachedUrl","localStorage","getItem","cachedUrl_1","btoa","setItem","workerSource","JSON","stringify","events","scope","ItcWorkerImpl","ports","listen","heartbeat","checkMaster","broadcast","removePort","index","updatePeer","filter","currentPort","findIndex","zoombie","name_1","__awaiter","thisArg","_arguments","P","generator","resolve","reject","fulfilled","step","next","e","rejected","result","done","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","NAMESPACE","HEART_BEAT","MASTER_HEART_BEAT","ZOOMBIE_THRESHOLD","EVENT_REGEXP","RegExp","StorageTransport","storage","onStorage","heartBeatTimer","masterHeartBeatTimer","newValue","oldValue","startsWith","matched","parse","EVENT","updateMaster","handleMessage","checkMasterAlive","retryTimes","status","masterHeartBeat","initializeInnerHandler","connect","removePeer","retry","preemptMaster","pendingPreempt","checkout","master_1","immediate","updatePeers","dirty","lastUpdate","Date","now","emitPeerUpdate","peerToRemoves","l","removeItem"],"mappings":"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","file":"static/js/peer.js?8c4d3244","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EVENTS = {\n    CONNECTED: 'CONNECTED',\n    INITIAL: 'INITIAL',\n    PONG: 'PONG',\n    PING: 'PING',\n    BECOME_MASTER: 'BECOME_MASTER',\n    DESTORY: 'DESTROY',\n    MESSAGE: 'MESSAGE',\n    UPDATE_PEERS: 'UPDATE_PEERS',\n    UPDATE_MASTER: 'UPDATE_MASTER',\n    // duplex\n    CALL: 'CALL',\n    CALL_RESPONSE: 'CALL_RESPONSE',\n};\nexports.ERRORS = {\n    NOT_FOUND: 'NOT_FOUND',\n    IGNORED: 'IGNORED',\n};\nexports.INNER_CALL = {\n    CHECK_ALIVE: 'CHECK_ALIVE',\n};\nexports.BroadcastPeer = {\n    id: '*',\n    name: 'broadcast',\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar transport_1 = require(\"./transport\");\nvar uid = 0;\nvar EventEmitter = /** @class */ (function () {\n    function EventEmitter(name) {\n        var _this = this;\n        this.ready = false;\n        this.destroyed = false;\n        this.queue = {};\n        this.defaultTimeout = 3000;\n        this.callbacks = {};\n        this.handlers = {};\n        this.pendingQueue = [];\n        this.watchingReady = [];\n        this.name = name;\n        this.on('ready', function () {\n            _this.ready = true;\n            _this.flushPendingQueue();\n        });\n        this.on('destroy', function () {\n            _this.ready = false;\n            _this.destroyed = true;\n        });\n        this.on('eventadded', function (desc) {\n            switch (desc.event) {\n                case 'ready':\n                    _this.ready && desc.handle(undefined);\n                    break;\n                case 'master':\n                    _this.ready && _this.isMaster().then(function (yes) { return yes && desc.handle(undefined); });\n                    break;\n            }\n        });\n    }\n    EventEmitter.prototype.on = function (event, handle) {\n        var _this = this;\n        if (event in this.queue) {\n            this.queue[event].push(handle);\n        }\n        else {\n            this.queue[event] = [handle];\n        }\n        if (event !== 'eventadded') {\n            this.emit('eventadded', { event: event, handle: handle });\n        }\n        return function () {\n            _this.off(event, handle);\n        };\n    };\n    EventEmitter.prototype.off = function (event, handle) {\n        if (event in this.queue) {\n            var idx = this.queue[event].indexOf(handle);\n            if (idx !== -1) {\n                this.queue[event].splice(idx, 1);\n            }\n        }\n    };\n    EventEmitter.prototype.emit = function (event, data) {\n        if (event in this.queue) {\n            var handles = this.queue[event].slice();\n            handles.forEach(function (h) { return h(data); });\n        }\n    };\n    EventEmitter.prototype.setCallTimeout = function (time) {\n        this.defaultTimeout = time;\n    };\n    EventEmitter.prototype.send = function (data, peer) {\n        if (peer === void 0) { peer = transport_1.BroadcastPeer; }\n        this.checkWorkerAvailable();\n        if (!this.ready) {\n            this.pendingQueue.push({ peer: peer, data: data });\n            return;\n        }\n        this.postMessage(peer, { type: transport_1.EVENTS.MESSAGE, data: data });\n    };\n    /**\n     * rpc call\n     */\n    EventEmitter.prototype.call = function (peer, name) {\n        var _this = this;\n        var args = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            args[_i - 2] = arguments[_i];\n        }\n        this.checkWorkerAvailable();\n        return this.waitReady().then(function () {\n            return _this.callInternal(peer, name, args, _this.defaultTimeout);\n        });\n    };\n    /**\n     * response call\n     */\n    EventEmitter.prototype.response = function (name, handler) {\n        if (name in this.handlers) {\n            throw new Error(\"handler for \" + name + \" was existed\");\n        }\n        this.handlers[name] = handler;\n    };\n    EventEmitter.prototype.waitReady = function () {\n        var _this = this;\n        return new Promise(function (res) {\n            if (_this.ready) {\n                res();\n            }\n            else {\n                _this.watchingReady.push(res);\n            }\n        });\n    };\n    EventEmitter.prototype.callInternal = function (peer, name, args, timeout) {\n        var _this = this;\n        return new Promise(function (res, rej) {\n            var fullfilled = false;\n            var id = uid++;\n            var timer;\n            var resolver = function (data) {\n                if (fullfilled) {\n                    return;\n                }\n                fullfilled = true;\n                if (timer) {\n                    clearTimeout(timer);\n                }\n                delete _this.callbacks[id];\n                res(data);\n            };\n            var rejecter = function (err) {\n                if (fullfilled) {\n                    return;\n                }\n                fullfilled = true;\n                delete _this.callbacks[id];\n                rej(err);\n            };\n            _this.callbacks[id] = {\n                resolver: resolver,\n                rejecter: rejecter,\n                name: name,\n                args: args,\n            };\n            var payload = {\n                type: transport_1.EVENTS.CALL,\n                data: {\n                    name: name,\n                    id: id,\n                    args: args,\n                },\n            };\n            _this.postMessage(peer, payload);\n            if (timeout != null) {\n                timer = window.setTimeout(function () {\n                    rejecter(new Error('timeout'));\n                }, timeout);\n            }\n        });\n    };\n    /**\n     * call 返回\n     */\n    EventEmitter.prototype.callReturn = function (peer, response) {\n        var id = response.id, data = response.data, error = response.error, name = response.name;\n        if (this.callbacks[id]) {\n            var _a = this.callbacks[id], resolver = _a.resolver, rejecter = _a.rejecter;\n            if (error != null) {\n                rejecter(new Error(error));\n            }\n            else {\n                resolver(data);\n            }\n        }\n        else {\n            console.warn(\"callbacks[\" + name + \"] for id(\" + id + \") not found!\");\n        }\n    };\n    /**\n     * 接收到call, 做出响应\n     */\n    EventEmitter.prototype.responseInternal = function (peer, message) {\n        var _this = this;\n        var _a;\n        var id = message.id, name = message.name, args = message.args;\n        var payload = {\n            type: transport_1.EVENTS.CALL_RESPONSE,\n            data: { id: id, name: name },\n        };\n        if (this.handlers[name]) {\n            (_a = this.handlers)[name].apply(_a, [peer].concat(args)).then(function (data) {\n                payload.data.data = data;\n                _this.postMessage(peer, payload);\n            })\n                .catch(function (error) {\n                payload.data.error = error.message;\n                _this.postMessage(peer, payload);\n            });\n        }\n        else {\n            // not found\n            payload.data.error = transport_1.ERRORS.NOT_FOUND;\n            this.postMessage(peer, payload);\n        }\n    };\n    EventEmitter.prototype.checkWorkerAvailable = function () {\n        if (this.destroyed) {\n            throw new Error('[itc]: current worker was destroyed.');\n        }\n    };\n    EventEmitter.prototype.flushPendingQueue = function () {\n        var _this = this;\n        var queue = this.pendingQueue;\n        this.pendingQueue = [];\n        queue.forEach(function (q) { return _this.send(q.data, q.peer); });\n        var watchingReady = this.watchingReady;\n        this.watchingReady = [];\n        watchingReady.forEach(function (q) { return q(); });\n    };\n    return EventEmitter;\n}());\nexports.default = EventEmitter;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction hash(str) {\n    var hash = 0;\n    if (str.length) {\n        for (var i = 0; i < str.length; i++) {\n            hash = (hash << 5) - hash + str.charCodeAt(i);\n            hash |= 0;\n        }\n    }\n    return hash.toString(36);\n}\nexports.hash = hash;\nfunction s4() {\n    return Math.floor(Math.random() * 0x10000 /* 65536 */).toString(16);\n}\n/**\n * UUID — http://ru.wikipedia.org/wiki/UUID\n */\nfunction uuid() {\n    return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\nexports.uuid = uuid;\nfunction delay(time) {\n    if (time === void 0) { time = 0; }\n    return new Promise(function (res) { return setTimeout(res, time); });\n}\nexports.delay = delay;\nfunction getRandomIntInclusive(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nexports.getRandomIntInclusive = getRandomIntInclusive;\nfunction objEquals(a, b) {\n    var args = [];\n    for (var _i = 2; _i < arguments.length; _i++) {\n        args[_i - 2] = arguments[_i];\n    }\n    for (var key in a) {\n        if (a.hasOwnProperty(key)) {\n            if (args.indexOf(key) !== -1) {\n                continue;\n            }\n            if (a[key] !== b[key]) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexports.objEquals = objEquals;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar transport_1 = require(\"./transport\");\nexports.Worker = transport_1.Worker;\nvar instance;\nvar defaultOptions = {\n    useStorage: false,\n};\nfunction create(name, options) {\n    options = __assign({}, defaultOptions, (options || {}));\n    if (instance && !instance.destroyed) {\n        return instance;\n    }\n    return (instance = (options.useStorage || !transport_1.Worker.isSupport ? new transport_1.Storage(name) : new transport_1.Worker(name)));\n}\nexports.default = create;\n","/**\n * App entry\n */\nimport itc, { Transport, Peer } from '@carney520/itc'\nimport React, { useEffect, useRef, useState, useCallback } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './style.css'\n\nfunction App() {\n  const ref = useRef<{ worker?: Transport }>({})\n  const [isMaster, setIsMaster] = useState(false)\n  const [master, setMaster] = useState<Peer | undefined>(undefined)\n  const [peers, setPeers] = useState<Peer[]>([])\n  const [position, setPosition] = useState<[number, number]>([0, 0])\n  const handleMouseMove = useCallback((evt: React.MouseEvent) => {\n    const pos: [number, number] = [evt.clientX, evt.clientY]\n    setPosition(pos)\n    if (ref.current.worker) {\n      ref.current.worker.send(pos)\n    }\n  }, [])\n\n  useEffect(() => {\n    const name = location.search.match(/name=(.*)$/)![1]\n    const worker = (ref.current.worker = itc(name, { useStorage: true }))\n    worker.on('master', () => {\n      setIsMaster(true)\n    })\n    worker.on('masterlose', () => {\n      setIsMaster(false)\n    })\n    worker.on('masterupdate', m => {\n      setMaster(m)\n    })\n    worker.on('peerupdate', p => {\n      setPeers(p)\n    })\n    worker.on('message', (data: [number, number]) => {\n      setPosition(data)\n    })\n  }, [])\n\n  return (\n    <div className={`${isMaster ? 'master' : ''} peer`} onMouseMove={handleMouseMove}>\n      <div>current master: {master && master.name}</div>\n      <div>peers: [{peers.map(i => i.name).join(', ')}]</div>\n      <div className=\"ball\" style={{ left: position[0], top: position[1] }} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./transport\"));\nvar worker_1 = require(\"./worker\");\nexports.Worker = worker_1.default;\nvar storage_1 = require(\"./storage\");\nexports.Storage = storage_1.default;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * 利用SharedWorker进行多页面通信\n * TODO: 健壮错误处理\n */\nvar event_emitter_1 = __importDefault(require(\"./event-emitter\"));\nvar utils_1 = require(\"../utils\");\nvar transport_1 = require(\"./transport\");\nvar WorkerPeer = {\n    id: -1,\n    name: 'worker',\n};\nexports.MAX_TRY_TIME = 4;\nvar WorkerTransport = /** @class */ (function (_super) {\n    __extends(WorkerTransport, _super);\n    function WorkerTransport(name) {\n        var _this = _super.call(this, name) || this;\n        _this.id = 0;\n        _this.tryTimes = 0;\n        _this.peers = [];\n        _this.destroy = function () {\n            if (_this.destroyed) {\n                return;\n            }\n            window.removeEventListener('unload', _this.destroy);\n            if (_this.worker) {\n                _this.worker.port.removeEventListener('message', _this.onMessage);\n                _this.postMessage(WorkerPeer, { type: transport_1.EVENTS.DESTORY });\n                _this.worker = undefined;\n            }\n            _this.emit('destroy');\n        };\n        _this.initializeWorker = function () {\n            if (_this.tryTimes >= exports.MAX_TRY_TIME) {\n                return;\n            }\n            _this.tryTimes++;\n            try {\n                _this.worker = new SharedWorker(_this.genSource());\n            }\n            catch (err) {\n                console.warn('[itc] SharedWorker Error: ', err);\n                _this.initializeWorker();\n                return;\n            }\n            _this.worker.addEventListener('error', _this.handleWorkerError);\n            _this.worker.port.addEventListener('message', _this.onMessage);\n            _this.worker.port.start();\n        };\n        _this.handleWorkerError = function (evt) {\n            var _a = evt, filename = _a.filename, lineno = _a.lineno, colno = _a.colno, message = _a.message;\n            console.warn(\"[itc] SharedWorker Error in \" + filename + \"(\" + lineno + \":\" + colno + \"): \" + message);\n            if (_this.worker) {\n                _this.worker.port.removeEventListener('message', _this.onMessage);\n                _this.worker.removeEventListener('error', _this.handleWorkerError);\n                _this.worker = undefined;\n            }\n            _this.initializeWorker();\n        };\n        _this.onMessage = function (evt) {\n            var message = evt.data;\n            var target = message.target, source = message.source, type = message.type, data = message.data;\n            if (source && source.id === _this.id) {\n                return;\n            }\n            switch (type) {\n                case transport_1.EVENTS.PING:\n                    _this.postMessage(WorkerPeer, { type: transport_1.EVENTS.PONG });\n                    break;\n                case transport_1.EVENTS.BECOME_MASTER:\n                    _this.emit('master');\n                    console.log('master');\n                    break;\n                case transport_1.EVENTS.CONNECTED:\n                    var _a = data, id = _a.id, peers = _a.peers, master = _a.master;\n                    var initialState = {\n                        name: _this.name,\n                    };\n                    _this.id = id;\n                    _this.peers = peers;\n                    _this.currentMaster = master;\n                    _this.postMessage(WorkerPeer, { type: transport_1.EVENTS.INITIAL, data: initialState });\n                    _this.emit('ready');\n                    console.log('ready');\n                    break;\n                case transport_1.EVENTS.MESSAGE:\n                    _this.emit('message', data);\n                    break;\n                case transport_1.EVENTS.CALL:\n                    _this.responseInternal(source, data);\n                    break;\n                case transport_1.EVENTS.CALL_RESPONSE:\n                    _this.callReturn(source, data);\n                    break;\n                case transport_1.EVENTS.UPDATE_PEERS:\n                    _this.peers = data;\n                    _this.emit('peerupdate', _this.peers);\n                    console.log('peer update');\n                    break;\n                case transport_1.EVENTS.UPDATE_MASTER:\n                    var prevMaster = _this.currentMaster;\n                    _this.currentMaster = data;\n                    if (prevMaster && prevMaster.id === _this.id && prevMaster.id !== _this.currentMaster.id) {\n                        console.log('master lose');\n                        _this.emit('masterlose');\n                    }\n                    _this.emit('masterupdate', _this.currentMaster);\n                    console.log('master update');\n                    break;\n                default:\n                    console.warn(\"[itc] unknown events: \" + type);\n                    break;\n            }\n        };\n        _this.initializeWorker();\n        window.addEventListener('unload', _this.destroy);\n        return _this;\n    }\n    Object.defineProperty(WorkerTransport.prototype, \"current\", {\n        get: function () {\n            return {\n                id: this.id,\n                name: this.name,\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    WorkerTransport.prototype.getPeers = function () {\n        var _this = this;\n        this.checkWorkerAvailable();\n        return this.waitReady().then(function () { return _this.peers; });\n    };\n    WorkerTransport.prototype.getMaster = function () {\n        var _this = this;\n        this.checkWorkerAvailable();\n        return this.waitReady().then(function () { return _this.currentMaster; });\n    };\n    WorkerTransport.prototype.isMaster = function () {\n        var _this = this;\n        return this.getMaster().then(function (master) {\n            return !!master && master.id === _this.id;\n        });\n    };\n    WorkerTransport.prototype.postMessage = function (peer, data) {\n        if (this.destroyed) {\n            return;\n        }\n        if (peer.id === this.id) {\n            console.warn('[itc] cannot postMessage to self');\n            return;\n        }\n        var payload = __assign({ target: peer.id, source: this.current }, data);\n        this.worker.port.postMessage(payload);\n    };\n    WorkerTransport.prototype.genSource = function () {\n        var source = this.getSource();\n        var sourceHash = utils_1.hash(source);\n        var key = \"itc-sw-\" + sourceHash;\n        var cachedUrl = window.localStorage.getItem(key);\n        if (cachedUrl) {\n            return cachedUrl;\n        }\n        else {\n            var cachedUrl_1 = \"data:text/javascript;base64,\" + btoa(source);\n            window.localStorage.setItem(key, cachedUrl_1);\n            return cachedUrl_1;\n        }\n    };\n    WorkerTransport.prototype.getSource = function () {\n        return \"\\n    (function(window){\\n      (\" + workerSource.toString() + \")(\" + JSON.stringify(transport_1.EVENTS) + \", window);\\n    })(this)\\n    \";\n    };\n    WorkerTransport.isSupport = !!(window.btoa && window.SharedWorker);\n    return WorkerTransport;\n}(event_emitter_1.default));\nexports.default = WorkerTransport;\n/**\n * worker 源代码\n */\nfunction workerSource(events, scope) {\n    var ItcWorkerImpl = /** @class */ (function () {\n        function ItcWorkerImpl(scope) {\n            this.ports = [];\n            this.uid = 0;\n            this.scope = scope;\n            this.listen();\n            this.heartbeat();\n        }\n        ItcWorkerImpl.prototype.checkMaster = function () {\n            if (this.master == null && this.ports.length) {\n                this.master = this.ports[0];\n                this.master.postMessage({ type: events.BECOME_MASTER });\n                this.broadcast({ type: events.UPDATE_MASTER, data: { id: this.master.id, name: this.master.name } });\n            }\n        };\n        ItcWorkerImpl.prototype.removePort = function (port) {\n            var index = this.ports.indexOf(port);\n            if (index !== -1) {\n                this.ports.splice(index, 1);\n            }\n            if (this.master === port) {\n                this.master = undefined;\n            }\n            this.updatePeer();\n            this.checkMaster();\n        };\n        ItcWorkerImpl.prototype.getPeers = function (port) {\n            return this.ports.filter(function (p) { return p.id !== port.id; }).map(function (p) { return ({ id: p.id, name: p.name }); });\n        };\n        /**\n         * sync peers\n         */\n        ItcWorkerImpl.prototype.updatePeer = function (currentPort) {\n            var _this = this;\n            this.ports\n                .filter(function (p) { return p !== currentPort; })\n                .forEach(function (port) {\n                var peers = _this.getPeers(port);\n                port.postMessage({ type: events.UPDATE_PEERS, data: peers });\n            });\n        };\n        ItcWorkerImpl.prototype.broadcast = function (data, source) {\n            this.ports.filter(function (p) { return p !== source; }).forEach(function (port) { return port.postMessage(data); });\n        };\n        ItcWorkerImpl.prototype.postMessage = function (data, source) {\n            if (data.target == null || data.target === '*') {\n                this.broadcast(data, source);\n                return;\n            }\n            if (data.target === -1) {\n                return;\n            }\n            var idx = this.ports.findIndex(function (i) { return i.id === data.target; });\n            if (idx !== -1) {\n                this.ports[idx].postMessage(data);\n            }\n        };\n        ItcWorkerImpl.prototype.heartbeat = function () {\n            var _this = this;\n            setTimeout(function () {\n                var i = _this.ports.length;\n                while (i--) {\n                    var port = _this.ports[i];\n                    if (port.zoombie) {\n                        _this.removePort(port);\n                    }\n                    else {\n                        port.zoombie = true;\n                        port.postMessage({ type: events.PING });\n                    }\n                }\n                _this.heartbeat();\n            }, 500);\n        };\n        ItcWorkerImpl.prototype.listen = function () {\n            var _this = this;\n            this.scope.addEventListener('connect', function (event) {\n                var port = event.ports[0];\n                port.id = _this.uid++;\n                port.addEventListener('message', function (evt) {\n                    // reconnect\n                    if (_this.ports.indexOf(port) === -1) {\n                        _this.ports.push(port);\n                        _this.checkMaster();\n                        _this.updatePeer();\n                        // force update master\n                        _this.postMessage({\n                            target: port.id,\n                            type: events.UPDATE_MASTER,\n                            data: { id: _this.master.id, name: _this.master.name },\n                        });\n                    }\n                    var message = evt.data;\n                    switch (message.type) {\n                        case events.PONG:\n                            port.zoombie = false;\n                            break;\n                        case events.MESSAGE:\n                            // forward to other ports\n                            _this.postMessage(message, port);\n                            break;\n                        case events.DESTORY:\n                            _this.removePort(port);\n                            break;\n                        case events.INITIAL:\n                            var name_1 = message.data.name;\n                            port.name = name_1;\n                            _this.updatePeer(port);\n                            break;\n                        default:\n                            // forward to other ports\n                            _this.postMessage(message, port);\n                            break;\n                    }\n                });\n                _this.ports.push(port);\n                port.start();\n                var currentMaster = _this.master || port;\n                var initialState = {\n                    id: port.id,\n                    peers: _this.getPeers(port),\n                    master: { name: currentMaster.name, id: currentMaster.id },\n                };\n                port.postMessage({\n                    type: events.CONNECTED,\n                    data: initialState,\n                });\n                _this.checkMaster();\n            });\n        };\n        return ItcWorkerImpl;\n    }());\n    return new ItcWorkerImpl(scope);\n}\nexports.workerSource = workerSource;\n","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * 利用storage event 多个同域页面实例之间进行通信\n *\n * 每个tab开启后会检查当前是有存在master tab. 和SharedWorker一样, master tab作为一个\n * 中间消息中转者, 用于转发和管理peer. 和SharedWorker不一样的是, master tab可能会被销毁,\n * 当slave tab和master tab的心跳中止后会认为master已经销毁. 这时候slave tab会去抢占master tab的\n * 地位. 这里也要考虑master假死的状况(比如页面被调试阻塞), 当master假死恢复后, 就丧失master的地位了.\n *\n * ## key 规范\n * NAMESPACE.event.desc\n * 内置events有\n *   + NS_master 表示当前的master, 所有tabs都向它发送消息\n *   + NS_message 用于消息传递\n * ## message 载荷规范\n * + target: id, 接收者id, 非接收者应该忽略掉. *表示广播\n * + data: 消息类型, 包含type(事件名), data(事件载荷)\n * + source: 消息源\n *\n */\nvar utils_1 = require(\"../utils\");\nvar transport_1 = require(\"./transport\");\nvar event_emitter_1 = __importDefault(require(\"./event-emitter\"));\nexports.NAMESPACE = '_ITC_';\nexports.HEART_BEAT = 2500;\nexports.MASTER_HEART_BEAT = 1000;\nexports.ZOOMBIE_THRESHOLD = 4000;\n/**\n * NAMESPACE.type.desc\n */\nvar EVENT_REGEXP = new RegExp(\"^\" + exports.NAMESPACE + \"\\\\.([^\\\\.]*)$\");\nvar StorageTransport = /** @class */ (function (_super) {\n    __extends(StorageTransport, _super);\n    function StorageTransport(name, storage) {\n        var _this = _super.call(this, name) || this;\n        _this.id = utils_1.uuid();\n        _this.peers = [];\n        _this.storage = window.localStorage;\n        _this.destroy = function () {\n            if (_this.destroyed) {\n                return;\n            }\n            if (_this.ready) {\n                _this.postMessage(transport_1.BroadcastPeer, { type: transport_1.EVENTS.DESTORY });\n            }\n            window.removeEventListener('storage', _this.onStorage);\n            document.removeEventListener('storage', _this.onStorage);\n            window.removeEventListener('unload', _this.destroy);\n            if (_this.heartBeatTimer) {\n                clearTimeout(_this.heartBeatTimer);\n                _this.heartBeatTimer = undefined;\n            }\n            if (_this.masterHeartBeatTimer) {\n                clearTimeout(_this.masterHeartBeatTimer);\n                _this.masterHeartBeatTimer = undefined;\n            }\n            _this.emit('destroy');\n            _this.peers = [];\n            _this.currentMaster = undefined;\n        };\n        _this.onStorage = function (evt) {\n            var _a = evt, key = _a.key, newValue = _a.newValue, oldValue = _a.oldValue;\n            if (key == null || !key.startsWith(exports.NAMESPACE) || newValue == null) {\n                return false;\n            }\n            var matched = key.match(EVENT_REGEXP);\n            if (matched == null) {\n                return false;\n            }\n            var value = JSON.parse(newValue);\n            var EVENT = matched[1];\n            switch (EVENT) {\n                case 'master':\n                    console.log('master', value, _this.name);\n                    _this.updateMaster(value);\n                    break;\n                case 'message':\n                    return _this.handleMessage(value);\n                    break;\n                default:\n                    console.warn(\"[itc] unknown event: \" + EVENT);\n                    return false;\n            }\n            return true;\n        };\n        _this.checkMasterAlive = function () { return __awaiter(_this, void 0, void 0, function () {\n            var retryTimes, currentMaster, i, res, err_1;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (this.destroyed) {\n                            return [2 /*return*/];\n                        }\n                        retryTimes = utils_1.getRandomIntInclusive(2, 4);\n                        i = 0;\n                        _a.label = 1;\n                    case 1:\n                        if (!(i < retryTimes)) return [3 /*break*/, 7];\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 6]);\n                        currentMaster = this.currentMaster;\n                        return [4 /*yield*/, this.callInternal(this.currentMaster, transport_1.INNER_CALL.CHECK_ALIVE, [], 1000)];\n                    case 3:\n                        res = _a.sent();\n                        if (res.status === 'correction') {\n                            this.updateMaster(this.getItem('master'));\n                        }\n                        this.masterHeartBeat();\n                        return [3 /*break*/, 7];\n                    case 4:\n                        err_1 = _a.sent();\n                        if (i === retryTimes - 1) {\n                            // 到这一步, 可能别的tab已经开启抢占和更改master了\n                            // try -- |master change| -- catch\n                            if (currentMaster && currentMaster !== this.currentMaster) {\n                                this.masterHeartBeat();\n                            }\n                            else {\n                                // master dead\n                                this.currentMaster = undefined;\n                                this.checkMaster(true);\n                            }\n                            return [3 /*break*/, 7];\n                        }\n                        return [4 /*yield*/, utils_1.delay()];\n                    case 5:\n                        _a.sent();\n                        return [3 /*break*/, 6];\n                    case 6:\n                        i++;\n                        return [3 /*break*/, 1];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        }); };\n        if (storage) {\n            _this.storage = storage;\n        }\n        console.log('current', _this.id, _this.name);\n        _this.initializeInnerHandler();\n        _this.connect();\n        return _this;\n    }\n    Object.defineProperty(StorageTransport.prototype, \"current\", {\n        get: function () {\n            return { id: this.id, name: this.name };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    StorageTransport.prototype.getMaster = function () {\n        var _this = this;\n        this.checkWorkerAvailable();\n        return this.waitReady().then(function () { return _this.currentMaster; });\n    };\n    StorageTransport.prototype.isMaster = function () {\n        var _this = this;\n        this.checkWorkerAvailable();\n        return this.getMaster().then(function (master) {\n            return !!master && master.id === _this.id;\n        });\n    };\n    StorageTransport.prototype.getPeers = function () {\n        var _this = this;\n        this.checkWorkerAvailable();\n        return this.waitReady().then(function () { return _this.peers; });\n    };\n    StorageTransport.prototype.initializeInnerHandler = function () {\n        var _this = this;\n        // 响应master存活检查，如果当前不是master则忽略\n        this.response(transport_1.INNER_CALL.CHECK_ALIVE, function (peer) {\n            if (_this.currentMaster) {\n                // 确定是master\n                if (_this.currentMaster.id === _this.id) {\n                    return Promise.resolve({ status: 'ok' });\n                }\n                else {\n                    console.log('master correct', \"from(\" + peer.name + \") -> \" + _this.name + \": \" + _this.currentMaster.name);\n                    // 纠错\n                    return Promise.resolve({ status: 'correction' });\n                }\n            }\n            return Promise.reject(transport_1.ERRORS.IGNORED);\n        });\n    };\n    StorageTransport.prototype.connect = function () {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        this.currentMaster = undefined;\n                        window.addEventListener('storage', this.onStorage);\n                        document.addEventListener('storage', this.onStorage);\n                        window.addEventListener('unload', this.destroy);\n                        return [4 /*yield*/, this.checkMaster()];\n                    case 1:\n                        _a.sent();\n                        this.heartbeat(true);\n                        this.emit('ready');\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StorageTransport.prototype.handleMessage = function (message) {\n        var target = message.target, source = message.source, data = message.data;\n        if (target !== this.id && target !== '*') {\n            return false;\n        }\n        if (source.id === this.id) {\n            return false;\n        }\n        switch (data.type) {\n            case transport_1.EVENTS.PING:\n                this.postMessage(source, { type: transport_1.EVENTS.PONG });\n                break;\n            case transport_1.EVENTS.PONG:\n                return this.updatePeer(source);\n            case transport_1.EVENTS.DESTORY:\n                this.removePeer(source);\n                break;\n            case transport_1.EVENTS.CALL:\n                this.responseInternal(source, data.data);\n                break;\n            case transport_1.EVENTS.CALL_RESPONSE:\n                this.callReturn(source, data.data);\n                break;\n            case transport_1.EVENTS.MESSAGE:\n                this.emit('message', data.data);\n                break;\n            default:\n                console.warn(\"[itc] unknown message event: \" + data.type);\n                return false;\n        }\n        return true;\n    };\n    /**\n     * 同步检查自己是否是master\n     */\n    StorageTransport.prototype.checkMaster = function (retry) {\n        return __awaiter(this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, this.preemptMaster(retry)];\n                    case 1:\n                        _a.sent();\n                        if (this.currentMaster.id !== this.id) {\n                            // 开始检测定期检测master是否存活\n                            this.masterHeartBeat();\n                        }\n                        else if (this.masterHeartBeatTimer) {\n                            window.clearTimeout(this.masterHeartBeatTimer);\n                        }\n                        return [2 /*return*/];\n                }\n            });\n        });\n    };\n    StorageTransport.prototype.updateMaster = function (peer) {\n        var prevMaster = this.currentMaster;\n        this.currentMaster = peer;\n        // master lose\n        // 如果当前页面卡死，或者被断点阻塞，那么将无法响应其他tab，这时候其他Tab会重新尝试\n        // 抢占master，从而产生新的master。这时候旧的master恢复了需要放弃master身份\n        if (prevMaster && prevMaster.id === this.id && prevMaster.id !== this.currentMaster.id) {\n            console.log('master lose', this.name);\n            this.emit('masterlose');\n            this.masterHeartBeat();\n        }\n        if (prevMaster == null || prevMaster.id !== peer.id) {\n            if (peer.id === this.id) {\n                this.emit('master');\n            }\n            this.emit('masterupdate', peer);\n        }\n        // 当前master正在抢占，终止抢占\n        if (this.pendingPreempt) {\n            this.pendingPreempt();\n            this.pendingPreempt = undefined;\n        }\n    };\n    /**\n     * 抢占master, 这里无法加锁, 所以产生竞态的多个tab, 这里的约定是选取最后设置master key\n     * 的Tab作为master. 设置master key 会通过onstorage 通知到其他tabs\n     */\n    StorageTransport.prototype.preemptMaster = function (retry) {\n        return __awaiter(this, void 0, void 0, function () {\n            var master, res, err_2;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        // 其他tabs已经抢占\n                        if (this.currentMaster) {\n                            return [2 /*return*/];\n                        }\n                        master = this.getItem('master');\n                        if (!(master && !retry)) return [3 /*break*/, 7];\n                        // 等于自己, 返回\n                        if (master.id === this.id) {\n                            this.currentMaster = master;\n                            this.emit('master');\n                            this.emit('masterupdate', master);\n                            return [2 /*return*/];\n                        }\n                        _a.label = 1;\n                    case 1:\n                        _a.trys.push([1, 3, , 6]);\n                        return [4 /*yield*/, this.callInternal(master, transport_1.INNER_CALL.CHECK_ALIVE, [], 500)];\n                    case 2:\n                        res = _a.sent();\n                        if (res.status === 'correction') {\n                            this.updateMaster(this.getItem('master'));\n                            return [2 /*return*/];\n                        }\n                        console.log('master existed', master.id, this.id, this.name);\n                        this.currentMaster = master;\n                        this.emit('masterupdate', master);\n                        return [3 /*break*/, 6];\n                    case 3:\n                        err_2 = _a.sent();\n                        console.log('master no alive', master.id, this.id, this.name);\n                        // timeout, 未存活, 抢占\n                        // 让出控制权, 让浏览器可以处理其他事件, 减少冲突的概率\n                        return [4 /*yield*/, utils_1.delay()];\n                    case 4:\n                        // timeout, 未存活, 抢占\n                        // 让出控制权, 让浏览器可以处理其他事件, 减少冲突的概率\n                        _a.sent();\n                        return [4 /*yield*/, this.preemptMaster(true)];\n                    case 5: return [2 /*return*/, _a.sent()];\n                    case 6: return [3 /*break*/, 9];\n                    case 7:\n                        console.log('preempt master', this.name);\n                        this.setItem('master', this.current);\n                        return [4 /*yield*/, new Promise(function (res) {\n                                var fullfilled = false;\n                                var checkout = function () {\n                                    if (fullfilled) {\n                                        return;\n                                    }\n                                    fullfilled = true;\n                                    if (!_this.currentMaster) {\n                                        // 还没被抢占, 可能是单独打开的页面\n                                        // 如果这时候有一个新页面打开会怎样? 不需要担心, Javascript是单线程的, 只有执行完这里,\n                                        // 才会处理EVENTS.CHECK_ALIVE响应\n                                        var master_1 = _this.getItem('master');\n                                        _this.currentMaster = master_1;\n                                        if (master_1.id === _this.id) {\n                                            _this.emit('master');\n                                        }\n                                        _this.emit('masterupdate', master_1);\n                                    }\n                                    // 其他tabs已经抢占\n                                    res();\n                                };\n                                _this.pendingPreempt = checkout;\n                                window.setTimeout(checkout, 100);\n                            })];\n                    case 8:\n                        _a.sent();\n                        _a.label = 9;\n                    case 9: return [2 /*return*/];\n                }\n            });\n        });\n    };\n    /**\n     * 定期检查master是否存活\n     */\n    StorageTransport.prototype.masterHeartBeat = function () {\n        // become master, stop heartbeat\n        if (this.currentMaster && this.currentMaster.id === this.id) {\n            return;\n        }\n        this.masterHeartBeatTimer = window.setTimeout(this.checkMasterAlive, exports.MASTER_HEART_BEAT);\n    };\n    /**\n     * 定期ping收集存活的peer\n     */\n    StorageTransport.prototype.heartbeat = function (immediate) {\n        var _this = this;\n        this.heartBeatTimer = window.setTimeout(function () {\n            if (_this.destroyed) {\n                return;\n            }\n            _this.postMessage(transport_1.BroadcastPeer, { type: transport_1.EVENTS.PING });\n            _this.updatePeers();\n            _this.heartbeat();\n        }, immediate ? 0 : exports.HEART_BEAT);\n    };\n    StorageTransport.prototype.updatePeer = function (peer) {\n        if (peer.id === this.id) {\n            return false;\n        }\n        var dirty = false;\n        var idx = this.peers.findIndex(function (p) { return p.id === peer.id; });\n        if (idx !== -1) {\n            if (!utils_1.objEquals(this.peers[idx], peer, 'lastUpdate')) {\n                dirty = true;\n            }\n            this.peers[idx] = __assign({}, peer, { lastUpdate: Date.now() });\n        }\n        else {\n            this.peers.push(__assign({}, peer, { lastUpdate: Date.now() }));\n            dirty = true;\n        }\n        if (dirty) {\n            this.emitPeerUpdate();\n        }\n        return dirty;\n    };\n    StorageTransport.prototype.removePeer = function (peer) {\n        var idx = this.peers.findIndex(function (p) { return p.id === peer.id; });\n        if (idx !== -1) {\n            this.peers.splice(idx, 1);\n            this.emitPeerUpdate();\n        }\n    };\n    StorageTransport.prototype.updatePeers = function () {\n        var _this = this;\n        var peerToRemoves = [];\n        // check zoombie\n        for (var i = 0, l = this.peers.length; i < l; i++) {\n            var p = this.peers[i];\n            if (Date.now() - p.lastUpdate > exports.ZOOMBIE_THRESHOLD) {\n                peerToRemoves.push(p);\n            }\n        }\n        peerToRemoves.forEach(function (p) {\n            var idx = _this.peers.findIndex(function (i) { return i.id === p.id; });\n            if (idx !== -1) {\n                _this.peers.splice(idx, 1);\n            }\n        });\n        if (peerToRemoves.length) {\n            this.emitPeerUpdate();\n        }\n    };\n    StorageTransport.prototype.emitPeerUpdate = function () {\n        this.emit('peerupdate', this.peers.map(function (_a) {\n            var id = _a.id, name = _a.name;\n            return ({\n                id: id,\n                name: name,\n            });\n        }));\n    };\n    StorageTransport.prototype.postMessage = function (peer, data) {\n        if (this.destroyed) {\n            return;\n        }\n        if (peer.id === this.id) {\n            console.warn('cannot postMessage to self', data);\n            return;\n        }\n        var payload = {\n            target: peer.id,\n            source: this.current,\n            data: data,\n        };\n        this.setItem(\"message\", payload);\n    };\n    StorageTransport.prototype.removeItem = function (key) {\n        this.storage.removeItem(exports.NAMESPACE + \".\" + key);\n    };\n    StorageTransport.prototype.setItem = function (key, value) {\n        this.storage.setItem(exports.NAMESPACE + \".\" + key, JSON.stringify(value));\n    };\n    StorageTransport.prototype.getItem = function (key) {\n        var data = this.storage.getItem(exports.NAMESPACE + \".\" + key);\n        if (data) {\n            return JSON.parse(data);\n        }\n    };\n    return StorageTransport;\n}(event_emitter_1.default));\nexports.default = StorageTransport;\n"],"sourceRoot":""}